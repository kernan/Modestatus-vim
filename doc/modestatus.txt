*modestatus.txt* A "vanilla" statusline for Vim.
*modestatus* *Modestatus*

===============================================================================
CONTENTS                                                  *modestatus-contents*

1. Settings...............................................|modestatus-settings|
2. Parts.....................................................|modestatus-parts|
3. Parts: Core..........................................|modestatus-parts-core|
4. Parts: Denite......................................|modestatus-parts-denite|
5. Parts: Hunks......................................|modestatus-parts-signify|
6. Parts: Loclist....................................|modestatus-parts-loclist|
7. Parts: Quickfix..................................|modestatus-parts-quickfix|
8. Options.................................................|modestatus-options|

===============================================================================
SETTINGS                                                  *modestatus-settings*

Overview:~
  |g:modestatus_loaded|.....................................Disable the plugin.
  |g:modestatus#statusline|...................................Statusline parts.
  |g:modestatus#default_separator|......................Default part separator.
  |g:modestatus#statusline_override|...........Statusline override by filetype.

-------------------------------------------------------------------------------
Description:~

                                                          *g:modestatus_loaded*
g:modestatus_loaded
  Use this to disable the plugin: >
    let g:modestatus_loaded = 1
<
                                                      *g:modestatus#statusline*
g:modestatus#statusline
  List of |modestatus#parts|.

  Default: >
    let g:modestatus#statusline = []
<
                                               *g:modestatus#default_separator*
g:modestatus#default_separator
  Default separator string to put between each statusline part.

  Default: >
    let g:modestatus#default_separator = ' '
<
===============================================================================
PARTS                                                        *modestatus-parts*

Overview:~
  |modestatus#parts#add|............................................Add a part.
  |modestatus#parts#has|..................................Check if part exists.
  |modestatus#parts#get|............................................Get a part.
  |modestatus#parts#list|.......................................List all parts.

-------------------------------------------------------------------------------
Description:~

                                                         *modestatus#parts#add*
modestatus#parts#add({key}, {func})
  Add a new statusline part referenced by {key} with content function {func}.

                                                         *modestatus#parts#has*
modestatus#parts#has({key})
  Check if a part {key} exists.

                                                         *modestatus#parts#get*
modestatus#parts#get({key})
  Get the name of the function that creates the content of the part {key}.

                                                        *modestatus#parts#list*
modestatus#parts#list()
  Echo a list of all the existing  parts.

===============================================================================
OPTIONS                                                    *modestatus-options*

Overview:~
  |modestatus#options#add|.........................................Add options.
  |modestatus#options#has|..............................Check if options exist.
  |modestatus#options#get|.........................................Get options.
  |modestatus#options#list|...................................List all options.

-------------------------------------------------------------------------------
Description:~

                                                       *modestatus#options#add*
modestatus#options#add({part}, {option}, {val})
  Add option {option} to a statusline part {part} with content {val}.
  Valid {option}s: ['color', 'format', 'separator']

                                                       *modestatus#options#has*
modestatus#options#has({part}, {option})
  Check if option {option} exists for statusline part {part}.

                                                       *modestatus#options#get*
modestatus#options#get({part}, {option})
  Get the option {option} for a statusline part {part}.

                                                      *modestatus#options#list*
modestatus#options#list()
  Echo a list of all existing options.

===============================================================================
PARTS - CORE                                            *modestatus-parts-core*

Overview:~
  |modestatus#parts#core|.....................................Statusline parts.
  |g:modestatus#parts#core#modified_symbol|....................Modified symbol.
  |g:modestatus#parts#core#mode_symbols|......................Mode symbols map.
  |g:modestatus#parts#core#paste_symbol|..........................Paste symbol.
  |g:modestatus#parts#core#readonly_symbol|....................Readonly symbol.

-------------------------------------------------------------------------------
Description:~

                                                        *modestatus#parts#core*
Defined a set of basic statusline parts.
  - bomb
  - bufnr
  - buftype
  - column
  - column_max
  - encoding
  - expandtab
  - fileformat
  - filename
  - filesize
  - filetype
  - line
  - line_max
  - line_percent
  - mode
  - modified
  - paste
  - readonly
  - shiftwidth
  - virtcol
  - virtcol_max

                                      *g:modestatus#parts#core#modified_symbol*
Default: >
  let g:modestatus#parts#core#modified_symbol = '+'
<
                                         *g:modestatus#parts#core#mode_symbols*
Default: >
  let g:modestatus#parts#core#mode_symbols = {
  \   'n': 'N',
  \   'i': 'I',
  \   'R': 'R',
  \   'v': 'V', 
  \   'V': 'V',
  \   "\<c-v>": 'V',
  \   'c': 'C',
  \   's': 'S',
  \   'S': 'S',
  \   "\<c-s>": 'S'
  \ }
<
                                         *g:modestatus#parts#core#paste_symbol*
Default: >
  let g:modestatus#parts#core#paste_symbol = 'P'
<
                                      *g:modestatus#parts#core#readonly_symbol*
Default: >
  let g:modestatus#parts#core#readonly_symbol = 'RO'
<
===============================================================================
PARTS - DENITE                                        *modestatus-parts-denite*

Overview:~
  |modestatus#parts#denite|.......................................Denite parts.
  |g:modestatus#parts#denite#mode_symbols|....................Mode symbols map.

-------------------------------------------------------------------------------
Description:~

                                                      *modestatus#parts#denite*
Parts:
  - denite_line
  - denite_line_max
  - denite_line_percent
  - denite_mode
  - denite_path
  - denite_sources

                                       *g:modestatus#parts#denite#mode_symbols*
Default: >
  let g:modestatus#parts#denite#mode_symbols = {
  \   '-- INSERT -- ': 'I',
  \   '-- NORMAL -- ': 'N'
  \ }

===============================================================================
PARTS - HUNKS                                          *modestatus-parts-hunks*

Overview:~
  |modestatus#parts#hunks|..........................................Hunk parts.

-------------------------------------------------------------------------------
Description:~

                                                       *modestatus#parts#hunks*
Parts:
  - hunks_added
  - hunks_modified
  - hunks_removed
<
===============================================================================
PARTS - LOCLIST                                      *modestatus-parts-loclist*

Overview:~
  |modestatus#parts#loclist|.....................................Loclist parts.

-------------------------------------------------------------------------------
Description:~

                                                     *modestatus#parts#loclist*
Parts:
  - loclist_errors
  - loclist_warnings

===============================================================================
PARTS - QUICKFIX                                     *modestatus-parts-loclist*

Overview:~
  |modestatus#parts#quickfix|...................................Loclist parts.

-------------------------------------------------------------------------------
Description:~

                                                    *modestatus#parts#quickfix*
Parts:
  - quickfix_errors
  - quickfix_warnings

===============================================================================
vim:tw=78:sw=2:ts=8:norl:noet:ft=help
